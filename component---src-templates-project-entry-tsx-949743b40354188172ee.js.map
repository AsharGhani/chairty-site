{"version":3,"sources":["webpack:///./src/services/journeyNode.tsx","webpack:///./src/templates/projectEntry.tsx","webpack:///./src/components/ProjectTitleBreadCrumb.tsx"],"names":["JourneyNode","getJourneyNodeFromMarkdownHtml","journeyHtml","returnNodes","htmlDOM","DOMParser","parseFromString","unProcessedSiblingImageElements","lightBoxNumber","i","body","children","length","htmlElement","imageElements","this","getImagesFromImageContainer","push","getLightBoxForImages","getNonImageNode","e","console","log","returnElements","altAttribute","attributes","getNamedItem","text","value","dangerouslySetInnerHTML","__html","outerHTML","imageElementsList","tagName","toLowerCase","htmlChildElement","colorTheme","themeLight","xl","getEmSize","breakpoints","StyledContainerDiv","widths","StyledDescription","StyledDate","dates","dimensions","headingSizes","h4","query","PageTemplate","journeyNode","projectEntry","data","contentfulProjectEntry","description","descriptionHtml","childMarkdownRemark","html","startDate","Date","undefined","layout","journey","Page","title","parent","parentProject","toLocaleDateString","weekday","year","month","day","lg","StyledTitleContainerDiv","activeItem","SytledTitle","h3","h1","StyledBreadCrumbEntry","Link","fontSize","regular","buttonSecondary","StyledBreadCrumbSeparator","large","createBreadCrumbEntry","link","to","key","ProjectTitleBreadCrump","props","breadCrumbEntries","breadCrumbProjects","slug","reverse"],"mappings":"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","file":"component---src-templates-project-entry-tsx-949743b40354188172ee.js","sourcesContent":["import * as React from \"react\";\r\n\r\nexport class JourneyNode {\r\n  public static getJourneyNodeFromMarkdownHtml(journeyHtml: string): React.ReactNode {\r\n    if (!journeyHtml) {\r\n      return undefined;\r\n    }\r\n\r\n    const returnNodes: React.ReactNode[] = [];\r\n\r\n    try {\r\n      const domParser = new DOMParser();\r\n      const htmlDOM = domParser.parseFromString(journeyHtml, \"text/html\");\r\n\r\n      const unProcessedSiblingImageElements: Element[] = [];\r\n      let lightBoxNumber = 1;\r\n      for (let i = 0; i < htmlDOM.body.children.length; i++) {\r\n        const htmlElement = htmlDOM.body.children[i];\r\n        const imageElements = this.getImagesFromImageContainer(htmlElement);\r\n        if (!imageElements || imageElements.length === 0) {\r\n          if (unProcessedSiblingImageElements.length > 0) {\r\n            returnNodes.push(this.getLightBoxForImages(unProcessedSiblingImageElements, lightBoxNumber));\r\n            unProcessedSiblingImageElements.length = 0;\r\n            lightBoxNumber++;\r\n          }\r\n        } else {\r\n          unProcessedSiblingImageElements.push(...imageElements);\r\n          continue;\r\n        }\r\n\r\n        returnNodes.push(this.getNonImageNode(htmlElement));\r\n      }\r\n\r\n      if (unProcessedSiblingImageElements.length > 0) {\r\n        returnNodes.push(this.getLightBoxForImages(unProcessedSiblingImageElements, lightBoxNumber));\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n    return <>{returnNodes}</>;\r\n  }\r\n\r\n  private static getLightBoxForImages(imageElements: Element[], lightBoxNumber: number): React.ReactNode {\r\n    const returnElements = [];\r\n    for (const imageElement of imageElements) {\r\n      const altAttribute = imageElement.attributes.getNamedItem(\"alt\");\r\n      let text = \"Light Box\";\r\n      if (altAttribute) {\r\n        text = altAttribute.value;\r\n      }\r\n      returnElements.push(<div>{`${lightBoxNumber}: ${text}`}</div>);\r\n    }\r\n    return returnElements;\r\n  }\r\n\r\n  private static getNonImageNode(htmlElement: Element) {\r\n    return <div dangerouslySetInnerHTML={{ __html: htmlElement.outerHTML }}></div>;\r\n  }\r\n\r\n  private static getImagesFromImageContainer(htmlElement: Element): Element[] | undefined {\r\n    const tagName = htmlElement.tagName;\r\n\r\n    const imageElementsList: Element[] = [];\r\n\r\n    switch (tagName.toLowerCase()) {\r\n      case \"img\":\r\n        return undefined;\r\n        imageElementsList.push(htmlElement);\r\n        break;\r\n      case \"p\":\r\n        for (let i = 0; i < htmlElement.children.length; i++) {\r\n          const htmlChildElement = htmlElement.children[i];\r\n          if (htmlChildElement.tagName.toLowerCase() === \"img\") {\r\n            imageElementsList.push(htmlChildElement);\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        return undefined;\r\n    }\r\n\r\n    return imageElementsList;\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport Page from \"../components/Page\";\r\nimport IndexLayout from \"../layouts\";\r\nimport styled from \"@emotion/styled\";\r\nimport ProjectTitleBreadCrump from \"../components/ProjectTitleBreadCrumb\";\r\nimport { getEmSize } from \"../styles/mixins\";\r\nimport { widths, breakpoints, dimensions, themeLight } from \"../styles/variables\";\r\nimport { JourneyNode } from \"../services/journeyNode\";\r\n\r\nconst colorTheme = themeLight;\r\n\r\nconst xl = `@media (min-width: ${getEmSize(breakpoints.xl)}em)`;\r\n\r\nconst StyledContainerDiv = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  ${xl} {\r\n    width: ${getEmSize(widths.xl)}em;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nconst StyledDescription = styled.div`\r\n  width: 100%;\r\n\r\n  ${xl} {\r\n    width: ${getEmSize(widths.xl)}em;\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nconst StyledDate = styled.div`\r\n  color: ${colorTheme.dates};\r\n  font-size: ${dimensions.headingSizes.h4}rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\ninterface PageTemplateProps {\r\n  data: {\r\n    contentfulProjectEntry: ProjectEntry;\r\n  };\r\n}\r\n\r\nconst PageTemplate: React.SFC<PageTemplateProps> = ({ data }) => {\r\n  const projectEntry = data.contentfulProjectEntry;\r\n  const description = projectEntry.description;\r\n  const descriptionHtml = description && description.childMarkdownRemark.html;\r\n  const startDate = projectEntry.startDate ? new Date(projectEntry.startDate) : undefined;\r\n  const dateOptions = { weekday: \"long\", year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n\r\n  let journeyNode: React.ReactNode;\r\n  if (projectEntry.layout && projectEntry.layout.toLowerCase() === \"journey\") {\r\n    const journeyHtml = projectEntry.journey && projectEntry.journey.childMarkdownRemark.html;\r\n    if (journeyHtml) {\r\n      journeyNode = JourneyNode.getJourneyNodeFromMarkdownHtml(journeyHtml);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <IndexLayout>\r\n      <Page>\r\n        <StyledContainerDiv>\r\n          <ProjectTitleBreadCrump title={projectEntry.title} parent={projectEntry.parentProject}></ProjectTitleBreadCrump>\r\n          {startDate && <StyledDate>{startDate.toLocaleDateString(undefined, dateOptions)}</StyledDate>}\r\n          {/* eslint-disable-next-line react/no-danger */}\r\n          {!journeyNode && descriptionHtml && (\r\n            <StyledDescription>\r\n              <div dangerouslySetInnerHTML={{ __html: descriptionHtml }} />\r\n            </StyledDescription>\r\n          )}\r\n\r\n          {\r\n            journeyNode\r\n            /*<div className=\"project-entry-journey\" dangerouslySetInnerHTML={{ __html: journeyHtml }}></div>*/\r\n          }\r\n        </StyledContainerDiv>\r\n      </Page>\r\n    </IndexLayout>\r\n  );\r\n};\r\n\r\nexport default PageTemplate;\r\n\r\nexport const query = graphql`\r\n  query projectEntryPageQuery($slug: String!) {\r\n    contentfulProjectEntry(slug: { eq: $slug }) {\r\n      slug\r\n      title\r\n      layout\r\n      startDate\r\n      journey {\r\n        childMarkdownRemark {\r\n          html\r\n        }\r\n      }\r\n      description {\r\n        childMarkdownRemark {\r\n          html\r\n        }\r\n      }\r\n      parentProject {\r\n        slug\r\n        parentProject {\r\n          slug\r\n          parentProject {\r\n            slug\r\n            title\r\n          }\r\n          title\r\n        }\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import * as React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { themeLight, dimensions, widths, breakpoints } from \"../styles/variables\";\r\nimport { Link } from \"gatsby\";\r\nimport { getEmSize } from \"../styles/mixins\";\r\n\r\nconst colorTheme = themeLight;\r\n\r\nconst xl = `@media (min-width: ${getEmSize(breakpoints.xl)}em)`;\r\nconst lg = `@media (min-width: ${getEmSize(breakpoints.lg)}em)`;\r\n\r\nconst StyledTitleContainerDiv = styled.div`\r\n  width: 100%;\r\n  padding-bottom: 20px;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n\r\n  ${xl} {\r\n    width: ${getEmSize(widths.xl)}em;\r\n    margin: auto;\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    width: 100%;\r\n    height: 0.125rem;\r\n    background-color: ${colorTheme.activeItem};\r\n  }\r\n`;\r\n\r\nconst SytledTitle = styled.span`\r\n  font-size: ${dimensions.headingSizes.h3}rem;\r\n\r\n  ${lg} {\r\n    font-size: ${dimensions.headingSizes.h1}rem;\r\n  }\r\n`;\r\n\r\nconst StyledBreadCrumbEntry = styled(Link)`\r\n  font-size: ${dimensions.fontSize.regular}px;\r\n  color: ${colorTheme.buttonSecondary};\r\n\r\n  ${lg} {\r\n    font-size: ${dimensions.headingSizes.h4}rem;\r\n  }\r\n`;\r\n\r\nconst StyledBreadCrumbSeparator = styled.span`\r\n  font-size: ${dimensions.fontSize.large}px;\r\n  color: ${colorTheme.dates};\r\n  &:after {\r\n    content: \"\\u232a\";\r\n  }\r\n  padding: 0px 8px;\r\n`;\r\n\r\ninterface ProjectTitleBreadCrumpProps {\r\n  title: string;\r\n  parent?: ProjectType;\r\n}\r\n\r\nfunction createBreadCrumbEntry(text: string, link: string) {\r\n  return (\r\n    <>\r\n      <StyledBreadCrumbEntry to={link} key=\"link\">\r\n        {text}\r\n      </StyledBreadCrumbEntry>{\" \"}\r\n      <StyledBreadCrumbSeparator />\r\n    </>\r\n  );\r\n}\r\n\r\nconst ProjectTitleBreadCrump: React.FC<ProjectTitleBreadCrumpProps> = function(props) {\r\n  const breadCrumbEntries = [];\r\n  breadCrumbEntries.push(createBreadCrumbEntry(\"Home\", \"/\"));\r\n\r\n  let breadCrumbProjects = [];\r\n  let parentProject = props.parent;\r\n  while (parentProject) {\r\n    const link = \"/projecttype/\" + parentProject.slug;\r\n    breadCrumbProjects.push(createBreadCrumbEntry(parentProject.title, link));\r\n    parentProject = parentProject.parentProject;\r\n  }\r\n\r\n  breadCrumbProjects = breadCrumbProjects.reverse();\r\n\r\n  breadCrumbEntries.push(...breadCrumbProjects);\r\n\r\n  return (\r\n    <StyledTitleContainerDiv>\r\n      {breadCrumbEntries}\r\n      <SytledTitle>{props.title}</SytledTitle>\r\n    </StyledTitleContainerDiv>\r\n  );\r\n};\r\n\r\nexport default ProjectTitleBreadCrump;\r\n"],"sourceRoot":""}